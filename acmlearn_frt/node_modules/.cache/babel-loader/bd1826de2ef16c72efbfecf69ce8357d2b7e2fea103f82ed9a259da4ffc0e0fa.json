{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedCategory: '',\n      selectedDifficulty: '',\n      selectedKnowledgePoint: '',\n      categories: [{\n        id: '1',\n        name: '编程'\n      }, {\n        id: '2',\n        name: '设计'\n      }, {\n        id: '3',\n        name: '市场营销'\n      }],\n      difficulties: [{\n        id: '1',\n        name: '初级'\n      }, {\n        id: '2',\n        name: '中级'\n      }, {\n        id: '3',\n        name: '高级'\n      }],\n      knowledgePoints: [{\n        id: '1',\n        name: 'JavaScript'\n      }, {\n        id: '2',\n        name: 'HTML/CSS'\n      }, {\n        id: '3',\n        name: 'UI设计'\n      }, {\n        id: '4',\n        name: 'SEO'\n      }],\n      courses: [{\n        name: 'JavaScript基础',\n        categories: ['编程'],\n        difficulty: '初级',\n        knowledgePoints: ['JavaScript']\n      }, {\n        name: 'HTML/CSS入门',\n        categories: ['编程'],\n        difficulty: '初级',\n        knowledgePoints: ['HTML/CSS']\n      }, {\n        name: 'UI设计基础',\n        categories: ['设计'],\n        difficulty: '中级',\n        knowledgePoints: ['UI设计']\n      }, {\n        name: 'SEO优化',\n        categories: ['市场营销'],\n        difficulty: '高级',\n        knowledgePoints: ['SEO']\n      }, {\n        name: '全栈开发',\n        categories: ['编程', '设计'],\n        difficulty: '中级',\n        knowledgePoints: ['JavaScript', 'HTML/CSS', 'UI设计']\n      }],\n      selectedTags: []\n    };\n  },\n  computed: {\n    filteredCourses() {\n      return this.courses.filter(course => {\n        //const categoryMatch = !this.selectedCategory || course.categories.includes(this.selectedCategory);\n        //const difficultyMatch = !this.selectedDifficulty || course.difficulty === this.selectedDifficulty;\n        //const knowledgePointMatch = !this.selectedKnowledgePoint || course.knowledgePoints.includes(this.selectedKnowledgePoint);\n        const tagsMatch = this.selectedTags.every(tag => {\n          if (tag.type === 'category') {\n            return course.categories.includes(tag.value);\n          } else if (tag.type === 'difficulty') {\n            return course.difficulty === tag.value;\n          } else if (tag.type === 'knowledgePoint') {\n            return course.knowledgePoints.includes(tag.value);\n          }\n          return false;\n        });\n        //return categoryMatch && difficultyMatch && knowledgePointMatch && tagsMatch;\n        return tagsMatch;\n      });\n    }\n  },\n  methods: {\n    handleCategoryChange() {\n      this.addTag('category', this.selectedCategory);\n      this.selectedDifficulty = '';\n      this.selectedKnowledgePoint = '';\n    },\n    handleDifficultyChange() {\n      this.addTag('difficulty', this.selectedDifficulty);\n      this.selectedKnowledgePoint = '';\n    },\n    handleKnowledgePointChange() {\n      this.addTag('knowledgePoint', this.selectedKnowledgePoint);\n    },\n    addTag(type, value) {\n      const label = this.getLabel(type, value);\n      if (label) {\n        this.selectedTags.push({\n          type,\n          value,\n          label\n        });\n      }\n    },\n    removeTag(tag) {\n      this.selectedTags = this.selectedTags.filter(t => t !== tag);\n      if (tag.type === 'category') {\n        this.selectedCategory = '';\n      } else if (tag.type === 'difficulty') {\n        this.selectedDifficulty = '';\n      } else if (tag.type === 'knowledgePoint') {\n        this.selectedKnowledgePoint = '';\n      }\n    },\n    getLabel(type, value) {\n      if (type === 'category') {\n        return this.categories.find(c => c.id === value)?.name;\n      } else if (type === 'difficulty') {\n        return this.difficulties.find(d => d.id === value)?.name;\n      } else if (type === 'knowledgePoint') {\n        return this.knowledgePoints.find(k => k.id === value)?.name;\n      }\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedCategory","selectedDifficulty","selectedKnowledgePoint","categories","id","name","difficulties","knowledgePoints","courses","difficulty","selectedTags","computed","filteredCourses","filter","course","tagsMatch","every","tag","type","includes","value","methods","handleCategoryChange","addTag","handleDifficultyChange","handleKnowledgePointChange","label","getLabel","push","removeTag","t","find","c","d","k"],"sources":["E:\\acm_learn\\acmlearn_frt\\src\\components\\CourseList.vue"],"sourcesContent":["<template>\r\n  <el-card>\r\n    <el-row>\r\n      <el-col :span=\"8\">\r\n        <el-select v-model=\"selectedCategory\" placeholder=\"选择类别\" @change=\"handleCategoryChange\">\r\n          <el-option\r\n            v-for=\"category in categories\"\r\n            :key=\"category.id\"\r\n            :label=\"category.name\"\r\n            :value=\"category.id\"\r\n          />\r\n        </el-select>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-select v-model=\"selectedDifficulty\" placeholder=\"选择难度\" @change=\"handleDifficultyChange\">\r\n          <el-option\r\n            v-for=\"difficulty in difficulties\"\r\n            :key=\"difficulty.id\"\r\n            :label=\"difficulty.name\"\r\n            :value=\"difficulty.id\"\r\n          />\r\n        </el-select>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-select v-model=\"selectedKnowledgePoint\" placeholder=\"选择知识点\" @change=\"handleKnowledgePointChange\">\r\n          <el-option\r\n            v-for=\"knowledgePoint in knowledgePoints\"\r\n            :key=\"knowledgePoint.id\"\r\n            :label=\"knowledgePoint.name\"\r\n            :value=\"knowledgePoint.id\"\r\n          />\r\n        </el-select>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row style=\"margin-top: 20px;\">\r\n      <el-col>\r\n        <el-tag\r\n          v-for=\"(tag, index) in selectedTags\"\r\n          :key=\"index\"\r\n          closable\r\n          @close=\"removeTag(tag)\"\r\n        >\r\n          {{ tag.label }}\r\n        </el-tag>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row style=\"margin-top: 20px;\">\r\n      <el-col>\r\n        <el-table :data=\"filteredCourses\" style=\"width: 100%\">\r\n          <el-table-column prop=\"name\" label=\"课程名称\" />\r\n          <el-table-column prop=\"categories\" label=\"类别\">\r\n            <template #default=\"scope\">\r\n              {{ scope.row.categories.join(', ') }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"difficulty\" label=\"难度\" />\r\n          <el-table-column prop=\"knowledgePoints\" label=\"知识点\">\r\n            <template #default=\"scope\">\r\n              {{ scope.row.knowledgePoints.join(', ') }}\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-col>\r\n    </el-row>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedCategory: '',\r\n      selectedDifficulty: '',\r\n      selectedKnowledgePoint: '',\r\n      categories: [\r\n        { id: '1', name: '编程' },\r\n        { id: '2', name: '设计' },\r\n        { id: '3', name: '市场营销' },\r\n      ],\r\n      difficulties: [\r\n        { id: '1', name: '初级' },\r\n        { id: '2', name: '中级' },\r\n        { id: '3', name: '高级' },\r\n      ],\r\n      knowledgePoints: [\r\n        { id: '1', name: 'JavaScript' },\r\n        { id: '2', name: 'HTML/CSS' },\r\n        { id: '3', name: 'UI设计' },\r\n        { id: '4', name: 'SEO' },\r\n      ],\r\n      courses: [\r\n        { name: 'JavaScript基础', categories: ['编程'], difficulty: '初级', knowledgePoints: ['JavaScript'] },\r\n        { name: 'HTML/CSS入门', categories: ['编程'], difficulty: '初级', knowledgePoints: ['HTML/CSS'] },\r\n        { name: 'UI设计基础', categories: ['设计'], difficulty: '中级', knowledgePoints: ['UI设计'] },\r\n        { name: 'SEO优化', categories: ['市场营销'], difficulty: '高级', knowledgePoints: ['SEO'] },\r\n        { name: '全栈开发', categories: ['编程', '设计'], difficulty: '中级', knowledgePoints: ['JavaScript', 'HTML/CSS', 'UI设计'] },\r\n      ],\r\n      selectedTags: [],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredCourses() {\r\n      return this.courses.filter(course => {\r\n        //const categoryMatch = !this.selectedCategory || course.categories.includes(this.selectedCategory);\r\n        //const difficultyMatch = !this.selectedDifficulty || course.difficulty === this.selectedDifficulty;\r\n        //const knowledgePointMatch = !this.selectedKnowledgePoint || course.knowledgePoints.includes(this.selectedKnowledgePoint);\r\n        const tagsMatch = this.selectedTags.every(tag => {\r\n          if (tag.type === 'category') {\r\n            return course.categories.includes(tag.value);\r\n          } else if (tag.type === 'difficulty') {\r\n            return course.difficulty === tag.value;\r\n          } else if (tag.type === 'knowledgePoint') {\r\n            return course.knowledgePoints.includes(tag.value);\r\n          }\r\n          return false;\r\n        });\r\n        //return categoryMatch && difficultyMatch && knowledgePointMatch && tagsMatch;\r\n        return tagsMatch;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    handleCategoryChange() {\r\n      this.addTag('category', this.selectedCategory);\r\n      this.selectedDifficulty = '';\r\n      this.selectedKnowledgePoint = '';\r\n    },\r\n    handleDifficultyChange() {\r\n      this.addTag('difficulty', this.selectedDifficulty);\r\n      this.selectedKnowledgePoint = '';\r\n    },\r\n    handleKnowledgePointChange() {\r\n      this.addTag('knowledgePoint', this.selectedKnowledgePoint);\r\n    },\r\n    addTag(type, value) {\r\n      const label = this.getLabel(type, value);\r\n      if (label) {\r\n        this.selectedTags.push({ type, value, label });\r\n      }\r\n    },\r\n    removeTag(tag) {\r\n      this.selectedTags = this.selectedTags.filter(t => t !== tag);\r\n      if (tag.type === 'category') {\r\n        this.selectedCategory = '';\r\n      } else if (tag.type === 'difficulty') {\r\n        this.selectedDifficulty = '';\r\n      } else if (tag.type === 'knowledgePoint') {\r\n        this.selectedKnowledgePoint = '';\r\n      }\r\n    },\r\n    getLabel(type, value) {\r\n      if (type === 'category') {\r\n        return this.categories.find(c => c.id === value)?.name;\r\n      } else if (type === 'difficulty') {\r\n        return this.difficulties.find(d => d.id === value)?.name;\r\n      } else if (type === 'knowledgePoint') {\r\n        return this.knowledgePoints.find(k => k.id === value)?.name;\r\n      }\r\n      return null;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 添加一些样式 */\r\n.el-card {\r\n  margin: 20px;\r\n}\r\n.el-tag {\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}