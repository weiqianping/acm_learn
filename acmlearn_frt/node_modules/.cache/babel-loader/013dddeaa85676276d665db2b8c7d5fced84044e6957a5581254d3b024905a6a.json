{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n  const _component_el_collapse = _resolveComponent(\"el-collapse\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"h1\", null, \"管理课程\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.handleAddCourse\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"添加课程\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_collapse, {\n    modelValue: $data.activeNames,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.activeNames = $event)\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.courses, (course, courseIndex) => {\n      return _openBlock(), _createBlock(_component_el_collapse_item, {\n        key: courseIndex,\n        name: courseIndex\n      }, {\n        title: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(course.name), 1 /* TEXT */), _createVNode(_component_el_button, {\n          type: \"text\",\n          onClick: _withModifiers($event => $options.handleAddChapter(courseIndex), [\"stop\"])\n        }, {\n          default: _withCtx(() => [...(_cache[2] || (_cache[2] = [_createTextVNode(\"添加章节\")]))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"text\",\n          onClick: _withModifiers($event => $options.handleEditCourse(courseIndex), [\"stop\"])\n        }, {\n          default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"编辑课程\")]))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"text\",\n          onClick: _withModifiers($event => $options.handleDeleteCourse(courseIndex), [\"stop\"])\n        }, {\n          default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\"删除课程\")]))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        default: _withCtx(() => [_createVNode(_component_el_collapse, {\n          modelValue: $data.activeChapterNames[courseIndex],\n          \"onUpdate:modelValue\": $event => $data.activeChapterNames[courseIndex] = $event\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(course.chapters, (chapter, chapterIndex) => {\n            return _openBlock(), _createBlock(_component_el_collapse_item, {\n              key: chapterIndex,\n              name: chapterIndex\n            }, {\n              title: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(chapter.name), 1 /* TEXT */), _createVNode(_component_el_button, {\n                type: \"text\",\n                onClick: _withModifiers($event => $options.handleAddVideo(courseIndex, chapterIndex), [\"stop\"])\n              }, {\n                default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\"添加视频\")]))]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                type: \"text\",\n                onClick: _withModifiers($event => $options.handleEditChapter(courseIndex, chapterIndex), [\"stop\"])\n              }, {\n                default: _withCtx(() => [...(_cache[6] || (_cache[6] = [_createTextVNode(\"编辑章节\")]))]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                type: \"text\",\n                onClick: _withModifiers($event => $options.handleDeleteChapter(courseIndex, chapterIndex), [\"stop\"])\n              }, {\n                default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"删除章节\")]))]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n              default: _withCtx(() => [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(chapter.videos, (video, videoIndex) => {\n                return _openBlock(), _createElementBlock(\"li\", {\n                  key: videoIndex\n                }, [_createElementVNode(\"span\", null, _toDisplayString(video.name), 1 /* TEXT */), _createVNode(_component_el_button, {\n                  type: \"text\",\n                  onClick: _withModifiers($event => $options.handleEditVideo(courseIndex, chapterIndex, videoIndex), [\"stop\"])\n                }, {\n                  default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\"编辑视频\")]))]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                  type: \"text\",\n                  onClick: _withModifiers($event => $options.handleDeleteVideo(courseIndex, chapterIndex, videoIndex), [\"stop\"])\n                }, {\n                  default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\"删除视频\")]))]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]);\n              }), 128 /* KEYED_FRAGMENT */))])]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"name\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"name\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_el_button","type","onClick","$options","handleAddCourse","default","_withCtx","_cache","_createTextVNode","_","_component_el_collapse","modelValue","$data","activeNames","$event","_Fragment","_renderList","courses","course","courseIndex","_createBlock","_component_el_collapse_item","key","name","title","_toDisplayString","_withModifiers","handleAddChapter","handleEditCourse","handleDeleteCourse","activeChapterNames","chapters","chapter","chapterIndex","handleAddVideo","handleEditChapter","handleDeleteChapter","videos","video","videoIndex","handleEditVideo","handleDeleteVideo"],"sources":["D:\\acm_learn\\acmlearn_frt\\src\\components\\CourseManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>管理课程</h1>\r\n      <el-button type=\"primary\" @click=\"handleAddCourse\">添加课程</el-button>\r\n      <el-collapse v-model=\"activeNames\">\r\n        <el-collapse-item v-for=\"(course, courseIndex) in courses\" :key=\"courseIndex\" :name=\"courseIndex\">\r\n          <template #title>\r\n            <span>{{ course.name }}</span>\r\n            <el-button type=\"text\" @click.stop=\"handleAddChapter(courseIndex)\">添加章节</el-button>\r\n            <el-button type=\"text\" @click.stop=\"handleEditCourse(courseIndex)\">编辑课程</el-button>\r\n            <el-button type=\"text\" @click.stop=\"handleDeleteCourse(courseIndex)\">删除课程</el-button>\r\n          </template>\r\n          <el-collapse v-model=\"activeChapterNames[courseIndex]\">\r\n            <el-collapse-item v-for=\"(chapter, chapterIndex) in course.chapters\" :key=\"chapterIndex\" :name=\"chapterIndex\">\r\n              <template #title>\r\n                <span>{{ chapter.name }}</span>\r\n                <el-button type=\"text\" @click.stop=\"handleAddVideo(courseIndex, chapterIndex)\">添加视频</el-button>\r\n                <el-button type=\"text\" @click.stop=\"handleEditChapter(courseIndex, chapterIndex)\">编辑章节</el-button>\r\n                <el-button type=\"text\" @click.stop=\"handleDeleteChapter(courseIndex, chapterIndex)\">删除章节</el-button>\r\n              </template>\r\n              <ul>\r\n                <li v-for=\"(video, videoIndex) in chapter.videos\" :key=\"videoIndex\">\r\n                  <span>{{ video.name }}</span>\r\n                  <el-button type=\"text\" @click.stop=\"handleEditVideo(courseIndex, chapterIndex, videoIndex)\">编辑视频</el-button>\r\n                  <el-button type=\"text\" @click.stop=\"handleDeleteVideo(courseIndex, chapterIndex, videoIndex)\">删除视频</el-button>\r\n                </li>\r\n              </ul>\r\n            </el-collapse-item>\r\n          </el-collapse>\r\n        </el-collapse-item>\r\n      </el-collapse>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        activeNames: [],\r\n        activeChapterNames: {},\r\n        courses: [\r\n          {\r\n            name: '课程1',\r\n            chapters: [\r\n              {\r\n                name: '章节1',\r\n                videos: [\r\n                  { name: '视频1' },\r\n                  { name: '视频2' },\r\n                ],\r\n              },\r\n              {\r\n                name: '章节2',\r\n                videos: [\r\n                  { name: '视频3' },\r\n                  { name: '视频4' },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            name: '课程2',\r\n            chapters: [\r\n              {\r\n                name: '章节3',\r\n                videos: [\r\n                  { name: '视频5' },\r\n                  { name: '视频6' },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    methods: {\r\n      handleAddCourse() {\r\n        // 处理添加课程逻辑\r\n        const newCourse = {\r\n          name: `新课程${this.courses.length + 1}`,\r\n          chapters: [],\r\n        };\r\n        this.courses.push(newCourse);\r\n        this.activeNames.push(this.courses.length - 1);\r\n      },\r\n      handleAddChapter(courseIndex) {\r\n        // 处理添加章节逻辑\r\n        const newChapter = {\r\n          name: `新章节${this.courses[courseIndex].chapters.length + 1}`,\r\n          videos: [],\r\n        };\r\n        this.courses[courseIndex].chapters.push(newChapter);\r\n        if (!this.activeChapterNames[courseIndex]) {\r\n          this.$set(this.activeChapterNames, courseIndex, []);\r\n        }\r\n        this.activeChapterNames[courseIndex].push(this.courses[courseIndex].chapters.length - 1);\r\n      },\r\n      handleEditCourse(courseIndex) {\r\n        // 处理编辑课程逻辑\r\n        console.log('编辑课程', courseIndex);\r\n      },\r\n      handleDeleteCourse(courseIndex) {\r\n        // 处理删除课程逻辑\r\n        this.courses.splice(courseIndex, 1);\r\n        this.activeNames.splice(courseIndex, 1);\r\n      },\r\n      handleAddVideo(courseIndex, chapterIndex) {\r\n        // 处理添加视频逻辑\r\n        const newVideo = {\r\n          name: `新视频${this.courses[courseIndex].chapters[chapterIndex].videos.length + 1}`,\r\n        };\r\n        this.courses[courseIndex].chapters[chapterIndex].videos.push(newVideo);\r\n      },\r\n      handleEditChapter(courseIndex, chapterIndex) {\r\n        // 处理编辑章节逻辑\r\n        console.log('编辑章节', courseIndex, chapterIndex);\r\n      },\r\n      handleDeleteChapter(courseIndex, chapterIndex) {\r\n        // 处理删除章节逻辑\r\n        this.courses[courseIndex].chapters.splice(chapterIndex, 1);\r\n        this.activeChapterNames[courseIndex].splice(chapterIndex, 1);\r\n      },\r\n      handleEditVideo(courseIndex, chapterIndex, videoIndex) {\r\n        // 处理编辑视频逻辑\r\n        console.log('编辑视频', courseIndex, chapterIndex, videoIndex);\r\n      },\r\n      handleDeleteVideo(courseIndex, chapterIndex, videoIndex) {\r\n        // 处理删除视频逻辑\r\n        this.courses[courseIndex].chapters[chapterIndex].videos.splice(videoIndex, 1);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 添加一些样式以美化组件 */\r\n  .el-collapse {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .el-button--text {\r\n    margin-left: 10px;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  li {\r\n    margin: 10px 0;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}