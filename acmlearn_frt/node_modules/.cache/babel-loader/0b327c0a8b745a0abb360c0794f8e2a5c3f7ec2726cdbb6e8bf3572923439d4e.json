{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-register\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  class: \"email-row\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  type: \"submit\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.isLogin ? '登录' : '注册'), 1 /* TEXT */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"邮箱\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), !$data.isLogin ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendVerificationCode && $options.sendVerificationCode(...args)),\n    disabled: $data.isCountingDown\n  }, _toDisplayString($data.isCountingDown ? `${$data.countdown}秒后重试` : '发送验证码'), 9 /* TEXT, PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true)]), !$data.isLogin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.code = $event),\n    placeholder: \"验证码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.code]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.username = $event),\n    placeholder: \"用户名\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.password = $event),\n    placeholder: \"密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.confirmPassword = $event),\n    placeholder: \"确认密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.username = $event),\n    placeholder: \"用户名\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.password = $event),\n    placeholder: \"密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])])), _createElementVNode(\"button\", _hoisted_7, _toDisplayString($data.isLogin ? '登录' : '注册'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.toggleView && $options.toggleView(...args))\n  }, _toDisplayString($data.isLogin ? '切换到注册' : '切换到登录'), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","key","type","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","isLogin","errorMessage","_hoisted_2","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","_hoisted_3","$event","email","placeholder","required","onClick","sendVerificationCode","disabled","isCountingDown","countdown","_hoisted_4","_hoisted_5","code","username","password","confirmPassword","_hoisted_6","_hoisted_7","toggleView"],"sources":["E:\\acm_learn\\acmlearn_frt\\src\\components\\LoginRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-register\">\r\n      <h1>{{ isLogin ? '登录' : '注册' }}</h1>\r\n      <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"email-row\">\r\n          <input type=\"email\" v-model=\"email\" placeholder=\"邮箱\" required />\r\n          <button type=\"button\" @click=\"sendVerificationCode\" :disabled=\"isCountingDown\" v-if=\"!isLogin\">\r\n            {{ isCountingDown ? `${countdown}秒后重试` : '发送验证码' }}\r\n          </button>\r\n        </div>\r\n        <div v-if=\"!isLogin\">\r\n          <input type=\"text\" v-model=\"code\" placeholder=\"验证码\" required />\r\n          <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" required />\r\n          <input type=\"password\" v-model=\"password\" placeholder=\"密码\" required />\r\n          <input type=\"password\" v-model=\"confirmPassword\" placeholder=\"确认密码\" required />\r\n        </div>\r\n        <div v-else>\r\n          <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" required />\r\n          <input type=\"password\" v-model=\"password\" placeholder=\"密码\" required />\r\n        </div>\r\n        <button type=\"submit\">{{ isLogin ? '登录' : '注册' }}</button>\r\n      </form>\r\n      <button @click=\"toggleView\">{{ isLogin ? '切换到注册' : '切换到登录' }}</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { useToast } from 'vue-toastification'\r\n  import { useRouter } from 'vue-router'\r\n  import { useStore } from '@/store'\r\n  import api from '@/services/api';\r\n  \r\n  \r\n  export default {\r\n    name: 'LoginRegister',\r\n    data() {\r\n      return {\r\n        isLogin: true,\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        username: '',\r\n        code: '',\r\n        isCountingDown: false,\r\n        countdown: 60,\r\n        errorMessage: ''\r\n      }\r\n    },\r\n    setup() {\r\n      const toast = useToast()\r\n      const router = useRouter()\r\n      const { login } = useStore()\r\n      return { toast, router, login }\r\n    },\r\n    methods: {\r\n      async handleSubmit() {\r\n        this.errorMessage = ''\r\n        if (this.isLogin) {\r\n          await this.handleLogin()\r\n        } else {\r\n          await this.register()\r\n        }\r\n      },\r\n      async handleLogin() {\r\n        try {\r\n          const response = await api.login(this.email, this.username, this.password);\r\n          console.log('登录成功:', response);\r\n          this.toast.success('登录成功');\r\n          // 保存 Token 和用户信息\r\n          localStorage.setItem('token', response.token);\r\n          \r\n          localStorage.setItem('user', JSON.stringify(response.user));\r\n          //localStorage.setItem('user', response.user);\r\n          // 更新全局状态\r\n          this.login(response.user);\r\n        } catch (error) {\r\n          this.errorMessage = error.response ? error.response.data : error.message;\r\n        }\r\n      },\r\n      async register() {\r\n        // 注册逻辑\r\n        if (this.password !== this.confirmPassword) {\r\n          this.errorMessage = '密码和确认密码不一致';\r\n          return;\r\n        }\r\n        try {\r\n          //console.log(this.verificationCode)\r\n          const response = await api.register(this.email, this.username, this.password, this.code);\r\n          console.log('注册成功:', response);\r\n          this.toast.success('注册成功');\r\n          this.router.push('/login');\r\n        } catch (error) {\r\n          this.errorMessage = error.response ? error.response.data : error.message;\r\n        }\r\n      },\r\n      async sendVerificationCode() {\r\n        try {\r\n          await api.sendVerificationCode(this.email);\r\n          this.toast.success('验证码发送成功');\r\n          this.startCountdown();\r\n        } catch (error) {\r\n          this.toast.error('发送验证码失败: ' + (error.response ? error.response.data : error.message));\r\n        }\r\n      },\r\n      startCountdown() {\r\n        this.isCountingDown = true;\r\n        const interval = setInterval(() => {\r\n          this.countdown -= 1;\r\n          if (this.countdown <= 0) {\r\n            clearInterval(interval);\r\n            this.isCountingDown = false;\r\n            this.countdown = 60;\r\n          }\r\n        }, 1000);\r\n      },\r\n      toggleView() {\r\n        this.isLogin = !this.isLogin;\r\n        this.email = '';\r\n        this.password = '';\r\n        this.confirmPassword = '';\r\n        this.username = '';\r\n        this.verificationCode = '';\r\n        this.errorMessage = '';\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-register {\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  \r\n  .login-register h1 {\r\n    font-size: 2rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .login-register form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    width: 100%;\r\n    max-width: 300px;\r\n  }\r\n  \r\n  .login-register input {\r\n    padding: 0.5rem;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .email-row {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .email-row input {\r\n    flex: 1;\r\n  }\r\n  \r\n  .email-row button {\r\n    padding: 0.5rem;\r\n    background-color: #42b983;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .email-row button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .login-register button {\r\n    padding: 0.5rem;\r\n    background-color: #42b983;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .login-register button:hover {\r\n    background-color: #38a169;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    margin-bottom: 1rem;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}